# Generated by Django 3.1.1 on 2020-10-03 14:04

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("authentication", "0017_remove_fleetup_permission"),
        ("eveuniverse", "0002_load_eveunit"),
    ]

    operations = [
        migrations.CreateModel(
            name="General",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": (
                    (
                        "basic_access",
                        "Can access this app and register and view own characters",
                    ),
                    ("finder_access", "Can access character finder feature"),
                    ("reports_access", "Can access reports feature"),
                    ("view_shared_characters", "Can view shared characters"),
                    ("view_same_corporation", "Can view corporation characters"),
                    ("view_same_alliance", "Can view alliance characters"),
                    ("view_everything", "Can view all characters"),
                ),
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "is_shared",
                    models.BooleanField(
                        default=False,
                        help_text="Shared characters can be viewed by recruiters",
                    ),
                ),
                (
                    "character_ownership",
                    models.OneToOneField(
                        help_text="ownership of this character on Auth",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberaudit_character",
                        to="authentication.characterownership",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterMail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mail_id", models.PositiveIntegerField()),
                ("is_read", models.BooleanField(default=None, null=True)),
                ("subject", models.CharField(default="", max_length=255)),
                ("body", models.TextField()),
                ("timestamp", models.DateTimeField(default=None, null=True)),
                (
                    "character",
                    models.ForeignKey(
                        help_text="character this mail belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mails",
                        to="memberaudit.character",
                    ),
                ),
                (
                    "from_entity",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eveuniverse.eveentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterMailingList",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("list_id", models.PositiveIntegerField()),
                ("name", models.CharField(max_length=254)),
                (
                    "character",
                    models.ForeignKey(
                        help_text="character this mailling list belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mailing_lists",
                        to="memberaudit.character",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterMailLabel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("label_id", models.PositiveIntegerField(db_index=True)),
                ("name", models.CharField(max_length=40)),
                ("color", models.CharField(default="", max_length=16)),
                ("unread_count", models.PositiveIntegerField(default=None, null=True)),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mail_labels",
                        to="memberaudit.character",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterDetails",
            fields=[
                (
                    "character",
                    models.OneToOneField(
                        help_text="character this details belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="details",
                        serialize=False,
                        to="memberaudit.character",
                    ),
                ),
                ("birthday", models.DateTimeField()),
                ("description", models.TextField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("m", "male"), ("f", "female")], max_length=1
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("security_status", models.FloatField(default=None, null=True)),
                ("title", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="CharacterMailUnreadCount",
            fields=[
                (
                    "character",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="unread_mail_count",
                        serialize=False,
                        to="memberaudit.character",
                    ),
                ),
                ("total", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="CharacterSkillpoints",
            fields=[
                (
                    "character",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="skillpoints",
                        serialize=False,
                        to="memberaudit.character",
                    ),
                ),
                (
                    "total",
                    models.BigIntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("unallocated", models.PositiveIntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CharacterWalletBalance",
            fields=[
                (
                    "character",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="wallet_balance",
                        serialize=False,
                        to="memberaudit.character",
                    ),
                ),
                ("total", models.DecimalField(decimal_places=2, max_digits=17)),
            ],
        ),
        migrations.CreateModel(
            name="CharacterWalletJournalEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "entry_id",
                    models.BigIntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=17,
                        null=True,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=17,
                        null=True,
                    ),
                ),
                ("context_id", models.BigIntegerField(default=None, null=True)),
                (
                    "context_id_type",
                    models.CharField(
                        choices=[
                            ("NON", "undefined"),
                            ("STA", "station_id"),
                            ("MTR", "market_transaction_id"),
                            ("CHR", "character_id"),
                            ("COR", "corporation_id"),
                            ("ALL", "alliance_id"),
                            ("EVE", "eve_system"),
                            ("INJ", "industry_job_id"),
                            ("CNT", "contract_id"),
                            ("PLN", "planet_id"),
                            ("SYS", "system_id"),
                            ("TYP", "type_id "),
                        ],
                        max_length=3,
                    ),
                ),
                ("date", models.DateTimeField()),
                ("description", models.TextField()),
                ("reason", models.TextField()),
                ("ref_type", models.CharField(max_length=32)),
                (
                    "tax",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=None,
                        max_digits=17,
                        null=True,
                    ),
                ),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallet_journal",
                        to="memberaudit.character",
                    ),
                ),
                (
                    "first_party",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="wallet_journal_entry_first_party_set",
                        to="eveuniverse.eveentity",
                    ),
                ),
                (
                    "second_party",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="wallet_journal_entry_second_party_set",
                        to="eveuniverse.eveentity",
                    ),
                ),
                (
                    "tax_receiver",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="wallet_journal_entry_tax_receiver_set",
                        to="eveuniverse.eveentity",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterUpdateStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "topic",
                    models.CharField(
                        choices=[
                            ("CD", "character details"),
                            ("CH", "corporation history"),
                            ("MA", "mails"),
                            ("SK", "skills"),
                            ("WB", "wallet balance"),
                            ("WJ", "wallet journal"),
                        ],
                        max_length=2,
                    ),
                ),
                ("is_success", models.BooleanField(db_index=True)),
                ("error_message", models.TextField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="update_status_set",
                        to="memberaudit.character",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterSkill",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active_skill_level", models.PositiveIntegerField()),
                (
                    "skillpoints_in_skill",
                    models.BigIntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("trained_skill_level", models.PositiveIntegerField()),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="skills",
                        to="memberaudit.character",
                    ),
                ),
                (
                    "eve_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eveuniverse.evetype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterMailRecipient",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eve_entity",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eveuniverse.eveentity",
                    ),
                ),
                (
                    "mail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipients",
                        to="memberaudit.charactermail",
                    ),
                ),
                (
                    "mailing_list",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="memberaudit.charactermailinglist",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CharacterMailMailLabel",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="memberaudit.charactermaillabel",
                    ),
                ),
                (
                    "mail",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="labels",
                        to="memberaudit.charactermail",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="charactermail",
            name="from_mailing_list",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="memberaudit.charactermailinglist",
            ),
        ),
        migrations.CreateModel(
            name="CharacterCorporationHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("record_id", models.PositiveIntegerField(db_index=True)),
                (
                    "is_deleted",
                    models.BooleanField(db_index=True, default=None, null=True),
                ),
                ("start_date", models.DateTimeField(db_index=True)),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="corporation_history",
                        to="memberaudit.character",
                    ),
                ),
                (
                    "corporation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eveuniverse.eveentity",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="characterwalletjournalentry",
            constraint=models.UniqueConstraint(
                fields=("character", "entry_id"),
                name="functional_pk_characterwalletjournalentry",
            ),
        ),
        migrations.AddConstraint(
            model_name="characterupdatestatus",
            constraint=models.UniqueConstraint(
                fields=("character", "topic"), name="functional_pk_charactersyncstatus"
            ),
        ),
        migrations.AddConstraint(
            model_name="characterskill",
            constraint=models.UniqueConstraint(
                fields=("character", "eve_type"), name="functional_pk_characterskill"
            ),
        ),
        migrations.AddConstraint(
            model_name="charactermailmaillabel",
            constraint=models.UniqueConstraint(
                fields=("mail", "label"), name="functional_pk_charactermailmaillabel"
            ),
        ),
        migrations.AddConstraint(
            model_name="charactermaillabel",
            constraint=models.UniqueConstraint(
                fields=("character", "label_id"),
                name="functional_pk_charactermaillabel",
            ),
        ),
        migrations.AddConstraint(
            model_name="charactermailinglist",
            constraint=models.UniqueConstraint(
                fields=("character", "list_id"),
                name="functional_pk_charactermailinglist",
            ),
        ),
        migrations.AddConstraint(
            model_name="charactermail",
            constraint=models.UniqueConstraint(
                fields=("character", "mail_id"), name="functional_pk_charactermail"
            ),
        ),
        migrations.AddField(
            model_name="characterdetails",
            name="alliance",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                related_name="owner_alliances",
                to="eveuniverse.eveentity",
            ),
        ),
        migrations.AddField(
            model_name="characterdetails",
            name="corporation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="owner_corporations",
                to="eveuniverse.eveentity",
            ),
        ),
        migrations.AddField(
            model_name="characterdetails",
            name="eve_ancestry",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to="eveuniverse.eveancestry",
            ),
        ),
        migrations.AddField(
            model_name="characterdetails",
            name="eve_bloodline",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="eveuniverse.evebloodline",
            ),
        ),
        migrations.AddField(
            model_name="characterdetails",
            name="eve_faction",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to="eveuniverse.evefaction",
            ),
        ),
        migrations.AddField(
            model_name="characterdetails",
            name="eve_race",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="eveuniverse.everace"
            ),
        ),
        migrations.AddConstraint(
            model_name="charactercorporationhistory",
            constraint=models.UniqueConstraint(
                fields=("character", "record_id"),
                name="functional_pk_charactercorporationhistory",
            ),
        ),
    ]
